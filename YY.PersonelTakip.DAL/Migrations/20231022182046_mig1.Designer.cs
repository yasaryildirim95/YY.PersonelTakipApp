// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YY.PersonelTakip.DAL.Context;

#nullable disable

namespace YY.PersonelTakip.DAL.Migrations
{
    [DbContext(typeof(PersonelAppContext))]
    [Migration("20231022182046_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maas")
                        .HasColumnType("int");

                    b.HasKey("DepartmanId");

                    b.ToTable("Departmanlar");

                    b.HasData(
                        new
                        {
                            DepartmanId = 1,
                            Aciklama = "İnsan Kaynakları",
                            Maas = 5000
                        },
                        new
                        {
                            DepartmanId = 2,
                            Aciklama = "Satış ve Pazarlama",
                            Maas = 5500
                        },
                        new
                        {
                            DepartmanId = 3,
                            Aciklama = "Hukuk",
                            Maas = 6000
                        },
                        new
                        {
                            DepartmanId = 4,
                            Aciklama = "Bilişim",
                            Maas = 6500
                        });
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.Egitim", b =>
                {
                    b.Property<int>("EgitimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EgitimId"));

                    b.Property<string>("Acıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EgitimId");

                    b.ToTable("Egitim");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.EgitimBilgi", b =>
                {
                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Doktora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("DoktoraBelge")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Ilkokul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UniBelge")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Yuksek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("YuksekBelge")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PersonelId");

                    b.ToTable("EgitimBilgileri");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.IzinHaklari", b =>
                {
                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int>("KalanIzinGunu")
                        .HasColumnType("int");

                    b.HasKey("PersonelId");

                    b.ToTable("IzinHaklari");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.Kidem", b =>
                {
                    b.Property<int>("KidemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KidemId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maas")
                        .HasColumnType("int");

                    b.HasKey("KidemId");

                    b.ToTable("Kidemler");

                    b.HasData(
                        new
                        {
                            KidemId = 1,
                            Aciklama = "Stajyer",
                            Maas = 2500
                        },
                        new
                        {
                            KidemId = 2,
                            Aciklama = "Düz Beyaz Yaka",
                            Maas = 4000
                        },
                        new
                        {
                            KidemId = 3,
                            Aciklama = "Uzman",
                            Maas = 6000
                        },
                        new
                        {
                            KidemId = 4,
                            Aciklama = "Yönetici",
                            Maas = 8000
                        });
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.KullanilanIzin", b =>
                {
                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonelId", "BaslangicTarihi");

                    b.ToTable("KullanilanIzinler");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.OzlukBilgi", b =>
                {
                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("AdliSicilBelgesi")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("AskerlikBelgesi")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Cv")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Ehliyet")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("EvlilikCüzdanı")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Ikametgah")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("IsBasvurusu")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SaglikRaporu")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SirketSozlesmesi")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PersonelId");

                    b.ToTable("OzlukBilgiler");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnneAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BabaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MedeniDurum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tc")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PersonelId");

                    b.HasIndex("SehirId");

                    b.HasIndex("Tc")
                        .IsUnique();

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.PersonelAyar", b =>
                {
                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmanID")
                        .HasColumnType("int");

                    b.Property<int>("KidemID")
                        .HasColumnType("int");

                    b.HasKey("PersonelId");

                    b.HasIndex("DepartmanID");

                    b.HasIndex("KidemID");

                    b.ToTable("PersonelAyarlari");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.PersonelEgitim", b =>
                {
                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int>("EgitimID")
                        .HasColumnType("int");

                    b.HasKey("PersonelId", "EgitimID");

                    b.HasIndex("EgitimID");

                    b.ToTable("PersonelEgitimler");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.PersonelSertifika", b =>
                {
                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int>("SertifikaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Dosya")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PersonelId", "SertifikaId");

                    b.ToTable("PersonelSertifika");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.Sehir", b =>
                {
                    b.Property<int>("SehirId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SehirId"));

                    b.Property<string>("SehirName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SehirId");

                    b.ToTable("Sehirler");

                    b.HasData(
                        new
                        {
                            SehirId = 1,
                            SehirName = "Ankara"
                        },
                        new
                        {
                            SehirId = 2,
                            SehirName = "İstanbul"
                        },
                        new
                        {
                            SehirId = 3,
                            SehirName = "İzmir"
                        },
                        new
                        {
                            SehirId = 4,
                            SehirName = "Antalya"
                        },
                        new
                        {
                            SehirId = 5,
                            SehirName = "Samsun"
                        });
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.EgitimBilgi", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.IzinHaklari", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.KullanilanIzin", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.OzlukBilgi", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.Personel", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sehir");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.PersonelAyar", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Departman", "Departman")
                        .WithMany()
                        .HasForeignKey("DepartmanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("YY.PersonelTakip.Entity.Entities.Kidem", "Kidem")
                        .WithMany()
                        .HasForeignKey("KidemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YY.PersonelTakip.Entity.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("Kidem");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.PersonelEgitim", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Egitim", "Egitim")
                        .WithMany()
                        .HasForeignKey("EgitimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YY.PersonelTakip.Entity.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Egitim");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("YY.PersonelTakip.Entity.Entities.PersonelSertifika", b =>
                {
                    b.HasOne("YY.PersonelTakip.Entity.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });
#pragma warning restore 612, 618
        }
    }
}
